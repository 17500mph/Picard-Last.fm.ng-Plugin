{"name":"Picard-last.fm.ng-plugin","tagline":"A last.fm toptag plugin for musicbrainz Picard.","body":"Picard Last.fm.ng Plugin\r\n~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThis plugin has been on github for over three years. I use it all the time\r\nand a few people have contacted me, telling me about minor issues.\r\nTherefore I am assuming people use it and it works.\r\n\r\nHowever, this is free software and if something goes wrong it is totally our\r\nown fault!\r\n\r\n\r\nAbout\r\n=====\r\n\r\nThe original and the plus Last.fm plugins are great. I used them a lot.\r\nHowever I always felt the configuration was overly complicated and the code\r\na bit of a mess and how the end result came to be sometimes a mystery.\r\n\r\nAlso I wanted a rocksolid way to only get exactly one genre tag at all times \r\nfor a complete album. Plus sometimes delivered two, when just one was \r\nconfigured and there was no way to determine a single \"albumgenre\".\r\n\r\nSome of the code and especially the name lists are reused from plus. Thanks\r\nagain for your work on this... RifRaf, Lukáš Lalinský, voiceinsideyou!\r\n\r\nDifferences to Last.fm.Plus\r\n---------------------------\r\n\r\nWhen using translations, the score of both toptags are summarized, rather \r\n\"the greater wins, the lesser is dropped\".\r\n\r\nYears and decades use a regular expression to find valid values. With decades,\r\nboth \"00s\" and \"2000s\" are valid. This can be easily customized using the\r\nLFM_DECADE and LFM_YEAR variables.\r\n\r\nThere is no \"inter tag drop\". The \"minimum weight\" is hardcoded to 1. So toptags\r\nwith score 0 are ignored. Usually they would not appear in any of the search\r\nlists anyway.\r\n\r\nThe \"year\" metatag is disabled for now.\r\n\r\nThere may be others, so best try it out yourself and see if it does the right\r\nthing for you.\r\n\r\n\r\nInstall\r\n=======\r\n\r\nCopy the \"lastfmng\" directory to ``~/.config/MusicBrainz/Picard/plugins`` and\r\nactivate the plugin in the GUI.\r\n\r\n\r\nConfiguration\r\n=============\r\n\r\nThe plugin does not provide a configuration dialog, but is easy to configure\r\nby customizing the provided ``config.ini`` file.\r\n\r\nPlease use your own Last.fm API key and set it using ``lastfm_key``.\r\nYou don't need to change ``lastfm_host`` or ``lastfm_port``, but by setting\r\n``lastfm_port`` to ``443`` https will be used.\r\n\r\nThe plugin does not just use all the tags it finds on Last.fm.\r\nOnly tags listed in the respective \"search lists\" will be used.\r\n\r\nCustomize the lists in the ``[searchlist]`` section of the configu file.\r\n\r\nTranslations of common tag variations are set in the ``[translations]`` section.\r\nThe first value is replaced with the second one.\r\n\r\n\r\nAdvanced configuration\r\n======================\r\n\r\nMore advanced configuration is possible in the ``settings.py`` file.\r\n\r\nThe ``CATEGORIES`` and ``CONFIG`` dictionaries defines how the plugin finds and\r\nselects tags for each metatag.\r\n\r\nContrary to the Last.fm.Plus plugin this one works via two plugin API triggers:\r\n\r\n- register_track_metadata_processor\r\n- register_album_metadata_processor\r\n\r\nThe Last.fm.Plus plugin only used the track metadata processor. Therefore\r\nit could not set metatags that need to be the same for all tracks, the whole\r\nalbum. The CONFIG dictionary contains the configuration for both triggers: \r\n\"album\" and \"track\".\r\n\r\nAlbum metadata processor\r\n------------------------\r\n\r\nIn the \"album\" run the plugin collects the toptags for \r\n\r\n- the album (\"album\" list), \r\n- the artist of each track  (\"all_artists\" list) and \r\n- each track (\"all_tracks\" list). \r\n\r\nThe toptags are collected in lists and when all tags are received, they are\r\nsorted into \"categories\" using the search lists. The \"weight\" parameters in the \r\nCONFIG dictionary are the factors, that are applied to the \"score\" of each tag.\r\n\r\nSo use the \"weight\" parameters to influence, whether to rank the toptags from \r\neg. the album higher, than those of all tracks combined.\r\n\r\nThe \"tag\" parameters define in what metatag (id3, ...) the toptags of which \r\ncategory are written. The first (the key) is the name of the category. \r\nPreviously there were minor and major toptags. I decided to directly use \r\n\"genre\" and \"grouping\". The second (the value) is the name of the metatag.\r\n\r\nSo to assign the toptags of category \"genre\" to the \"grouping\" metatag simply\r\nchange the second value.\r\n\r\nAs you can see the metatags in the \"album\" are actually not valid for most media\r\nformats. They are meant to be used in naming scripts (for example a \"genre\"\r\npath), because they are guaranteed to be the same for all tracks of the entire\r\nalbum.\r\n\r\nTrack metadata processor\r\n------------------------\r\n\r\nThe \"track\" run works very similar to the Last.fm.Plus plugin. It collects \r\ntoptags for\r\n\r\n- the artist (\"artist\" list) and\r\n- the track (\"track\" list)\r\n\r\nfor each track of the album separately one by one.\r\n\r\nAgain the weight parameters are the multiplicators applied to the toptag lists.\r\nTo disable tagging using the track information and only use the artist, simply \r\nset the weight of \"track\" to 0.\r\n\r\nIf you used the Last.fm.Plus plugin the metatag names in the \"tags\" section will\r\nbe familiar. Each metatag is set per track. Similar to before, the first column\r\nare the \"categories\" in which toptags are grouped using the search lists and the\r\nsecond column are the names of the metatags in your files.\r\n\r\nMetatag formatting \r\n------------------\r\n\r\nWhat is left, is the CATEGORIES dictionary. Here you can set a hard \"limit\" how\r\nmany of the found toptags should be used per category (and assigned to a\r\nmetatag).\r\n\r\nIf you set the limit to 1 and two toptags have exactly the same score the result\r\nwill be exactly one toptag, which one however is not clearly defined! There is\r\nroom for improvement here.\r\n\r\nTo disable writing a specific category/metatag set \"enabled\" to False. Setting\r\n\"sort\" to True will sort the toptags alphabetically after the ones with the\r\nhighest score have been determined. Set this to False to keep the one with the\r\nhighest score in front!\r\n\r\nUsing \"titlecase\" you can switch fixing the case of toptags off and on. The\r\n\"separator\" is used to combine more than one toptag into a metatag string and in\r\ncase not a single toptag was found for a category the value of \"unknown\" is set.\r\n\r\nSearchlists and searchtrees\r\n---------------------------\r\n\r\nThe CATEGORIES dictionary is an ordered dictionary. The sequence of categories\r\nis important when using searchtrees. Searchtrees are an attempt to implement\r\nSlukd's feature request for grouping-dependent genre tags\r\n(http://forums.musicbrainz.org/viewtopic.php?pid=15871#p15871). Please see the\r\nsource comments on how to use this.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}